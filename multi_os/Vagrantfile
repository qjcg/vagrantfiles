hosts = {
	"centos" 	=> {"units" => 0, "mem" => "512", "box" => "centos/7"},
	"centos6" 	=> {"units" => 0, "mem" => "512", "box" => "centos/6"},
	"ubuntu" 	=> {"units" => 0, "mem" => "512", "box" => "ubuntu/xenial64"},
	"ubuntuTrusty" 	=> {"units" => 0, "mem" => "512", "box" => "ubuntu/trusty64"},
	"debian" 	=> {"units" => 0, "mem" => "512", "box" => "debian/jessie64"},
	"opensuse" 	=> {"units" => 0, "mem" => "512", "box" => "opensuse/openSUSE-42.1-x86_64"},
	"openwrt" 	=> {"units" => 0, "mem" => "512", "box" => "ntrepid8/openwrt-15.05-x86"},
	"arch" 		=> {"units" => 1, "mem" => "512", "box" => "archlinux/archlinux"},
	"fedora" 	=> {"units" => 0, "mem" => "512", "box" => "fedora/25-cloud-base"},
	"freebsd" 	=> {"units" => 0, "mem" => "512", "box" => "freebsd/FreeBSD-11.0-STABLE"},
	"openbsd" 	=> {"units" => 0, "mem" => "512", "box" => "SierraX/openbsd-6.1"},
}

Vagrant.configure(2) do |config|
	hosts.each do |distro, v|

		# Create distro units (instances).
		(1..v["units"]).each do |i|

			# Set variable to be used as *both* the vagrant machine
			# name and the hostname.
			name = "%s%d" % [distro, i]

			config.vm.define name do |u|
				u.vm.box = v["box"]
				u.vm.hostname = name
				u.vm.network "private_network", type: "dhcp"

				u.vm.provider "virtualbox" do |vb|
					vb.linked_clone = true
					vb.gui = false
					vb.memory = v["mem"]
				end

				# Ansible provisioning.
				u.vm.provision "ansible" do |a|
					a.playbook = "playbook.yml"
					a.host_vars = {
						"arch1" => {"ansible_python_interpreter" => "/usr/bin/python2" },
					}
				end
			end
		end
	end
end
